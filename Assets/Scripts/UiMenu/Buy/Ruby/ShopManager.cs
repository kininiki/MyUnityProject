using UnityEngine;
using UnityEngine.Purchasing;
using System.Collections.Generic;
using System.Threading.Tasks;
using Unity.Services.Core;
using Unity.Services.CloudSave;
using Unity.Services.Authentication;
using Newtonsoft.Json;
using UnityEngine.SceneManagement;

public class ShopManager : MonoBehaviour, IStoreListener
{

    
    private static IStoreController storeController;
    private static IExtensionProvider extensionProvider;

    // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    public const string RUBY_PRODUCT_ID_SMALL = "com.defaultcompany.rubysmall";
    public const string RUBY_PRODUCT_ID_MIDDLE = "com.defaultcompany.rubymiddle";
    public const string RUBY_PRODUCT_ID_BIG = "com.defaultcompany.rubybig";
    public const string RUBY_PRODUCT_ID_VERYBIG = "com.defaultcompany.rubyverybig";
    public const string RUBY_PRODUCT_ID_ELIXIRSMALL = "com.defaultcompany.elixirsmall";
    public const string RUBY_PRODUCT_ID_ELIXIRMIDDLE = "com.defaultcompany.elixirmiddle";
    public const string RUBY_PRODUCT_ID_CATMONEYSMALL = "com.defaultcompany.catmoneysmall";
    [SerializeField] private TMPro.TMP_Text rubysmallPriceText;
    [SerializeField] private TMPro.TMP_Text rubymiddlePriceText;
    [SerializeField] private TMPro.TMP_Text rubybigPriceText;
    [SerializeField] private TMPro.TMP_Text rubyverybigPriceText;
    [SerializeField] private TMPro.TMP_Text elixirsmallPriceText;
    [SerializeField] private TMPro.TMP_Text elixirmiddlePriceText;
    [SerializeField] private TMPro.TMP_Text catmoneysmallPriceText;



//    public const string ELIXIR_PRODUCT_ID = "com.mycompany.elixirsmall";
//    public const string CATMONEY_PRODUCT_ID = "com.mycompany.catmoneysmall";

    private void Start()
    {
//        DontDestroyOnLoad(gameObject);

        if (storeController != null && storeController.products != null)
        {
            Debug.Log("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤...");
            var products = storeController.products.all;
            foreach (var product in products)
            {
                Debug.Log($"‚úÖ –¢–æ–≤–∞—Ä –≤ —Å–∏—Å—Ç–µ–º–µ: {product.definition.id}");
            }
        }

        if (storeController == null || storeController.products.all.Length == 0)
        {
            InitializePurchasing();
        }
        else
        {
            Debug.Log("‚ôª IAP —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ");
            RefreshIAPProducts();
        }

    }

    private void RefreshIAPProducts()
    {
        if (storeController != null)
        {
            Debug.Log("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ IAP...");
            
            foreach (var product in storeController.products.all)
            {
                if (product != null && product.availableToPurchase)
                {
                    //Debug.Log($"‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–æ–¥—É–∫—Ç: {product.definition.id} | –¶–µ–Ω–∞: {product.metadata.localizedPriceString}");
                }
                else
                {
                    Debug.LogWarning($"‚ö† –ü—Ä–æ–¥—É–∫—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–∫—É–ø–∫–∏: {product.definition.id}");
                }
            }
        }
        else
        {
            Debug.LogError("‚ùå storeController == null, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã IAP!");
        }
    }






    private void OnEnable()
    {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ –º–∞–≥–∞–∑–∏–Ω
        if (storeController != null)
        {
            UpdatePrices();
        }
        else
        {
            InitializePurchasing();
        }
    }



    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∫—É–ø–æ–∫
    public void InitializePurchasing()
    {
        if (storeController != null)
        {
            return;
        }

        var builder = ConfigurationBuilder.Instance(StandardPurchasingModule.Instance());

        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        builder.AddProduct(RUBY_PRODUCT_ID_SMALL, ProductType.Consumable);
        builder.AddProduct(RUBY_PRODUCT_ID_MIDDLE, ProductType.Consumable);
        builder.AddProduct(RUBY_PRODUCT_ID_BIG, ProductType.Consumable);
        builder.AddProduct(RUBY_PRODUCT_ID_VERYBIG, ProductType.Consumable);
        builder.AddProduct(RUBY_PRODUCT_ID_ELIXIRSMALL, ProductType.Consumable);
        builder.AddProduct(RUBY_PRODUCT_ID_ELIXIRMIDDLE, ProductType.Consumable);
        builder.AddProduct(RUBY_PRODUCT_ID_CATMONEYSMALL, ProductType.Consumable);

        UnityPurchasing.Initialize(this, builder);
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    public void OnInitialized(IStoreController controller, IExtensionProvider extensions)
    {
        storeController = controller;
        extensionProvider = extensions;

        Debug.Log("Unity IAP –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.");

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—ã –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö
        UpdatePrices();
    }

    private void UpdatePrices()
    {
        rubysmallPriceText.text = GetLocalizedPrice(ShopManager.RUBY_PRODUCT_ID_SMALL);
        rubymiddlePriceText.text = GetLocalizedPrice(ShopManager.RUBY_PRODUCT_ID_MIDDLE);
        rubybigPriceText.text = GetLocalizedPrice(ShopManager.RUBY_PRODUCT_ID_BIG);
        rubyverybigPriceText.text = GetLocalizedPrice(ShopManager.RUBY_PRODUCT_ID_VERYBIG);
        elixirsmallPriceText.text = GetLocalizedPrice(ShopManager.RUBY_PRODUCT_ID_ELIXIRSMALL);
        elixirmiddlePriceText.text = GetLocalizedPrice(ShopManager.RUBY_PRODUCT_ID_ELIXIRMIDDLE);
        catmoneysmallPriceText.text = GetLocalizedPrice(ShopManager.RUBY_PRODUCT_ID_CATMONEYSMALL);
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    public void OnInitializeFailed(InitializationFailureReason error)
    {
        Debug.LogError($"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ IAP: {error}");
    }

    // –ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∞
    public void BuyProduct(string productId)
    {
        if (storeController == null)
        {
            Debug.LogError("IAP –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.");
            return;
        }

        storeController.InitiatePurchase(productId);
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–∏
    public PurchaseProcessingResult ProcessPurchase(PurchaseEventArgs args)
    {
        if (args.purchasedProduct.definition.id == RUBY_PRODUCT_ID_SMALL)
        {
            Debug.Log("–ü–æ–∫—É–ø–∫–∞ –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ä—É–±–∏–Ω–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.");
            GameCloud.Instance.UpdateResource("PLAYER_RUBY", 70);
            //RubyManagerShop.Instance.SubtractRuby(5); // –í—ã—á–µ—Å—Ç—å 5 —Ä—É–±–∏–Ω–æ–≤
            // –î–æ–±–∞–≤—å—Ç–µ —Ä—É–±–∏–Ω—ã –∏–≥—Ä–æ–∫—É
        }
        else if (args.purchasedProduct.definition.id == RUBY_PRODUCT_ID_MIDDLE)
        {
            Debug.Log("–ü–æ–∫—É–ø–∫–∞ —Å—Ä–µ–¥–Ω–∏—Ö —Ä—É–±–∏–Ω–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.");
            GameCloud.Instance.UpdateResource("PLAYER_RUBY", 150);
            // –î–æ–±–∞–≤—å—Ç–µ —ç–ª–∏–∫—Å–∏—Ä—ã –∏–≥—Ä–æ–∫—É
        }
        else if (args.purchasedProduct.definition.id == RUBY_PRODUCT_ID_BIG)
        {
            Debug.Log("–ü–æ–∫—É–ø–∫–∞ –±–æ–ª—å—à–∏—Ö —Ä—É–±–∏–Ω–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.");
            GameCloud.Instance.UpdateResource("PLAYER_RUBY", 300); // –î–æ–±–∞–≤–∏—Ç—å 300 —Ä—É–±–∏–Ω–æ–≤
            // –î–æ–±–∞–≤—å—Ç–µ Catmoney –∏–≥—Ä–æ–∫—É
        }
        else if (args.purchasedProduct.definition.id == RUBY_PRODUCT_ID_VERYBIG)
        {
            Debug.Log("–ü–æ–∫—É–ø–∫–∞ –æ—á–µ–Ω—å –±–æ–ª—å—à–∏—Ö —Ä—É–±–∏–Ω–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.");
            GameCloud.Instance.UpdateResource("PLAYER_RUBY", 900); // –î–æ–±–∞–≤–∏—Ç—å 900 —Ä—É–±–∏–Ω–æ–≤
            // –î–æ–±–∞–≤—å—Ç–µ Catmoney –∏–≥—Ä–æ–∫—É
        }
        else if (args.purchasedProduct.definition.id == RUBY_PRODUCT_ID_ELIXIRSMALL)
        {   
            Debug.Log("–ü–æ–∫—É–ø–∫–∞ –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–ª–∏–∫—Å–∏—Ä–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.");
            GameCloud.Instance.UpdateResource("PLAYER_ELIXIR", 5); // –î–æ–±–∞–≤–∏—Ç—å 5 —ç–ª–∏–∫—Å–∏—Ä–æ–≤
            // –î–æ–±–∞–≤—å—Ç–µ Catmoney –∏–≥—Ä–æ–∫—É
        }
        else if (args.purchasedProduct.definition.id == RUBY_PRODUCT_ID_ELIXIRMIDDLE)
        {
            Debug.Log("–ü–æ–∫—É–ø–∫–∞ —Å—Ä–µ–¥–Ω–∏—Ö —ç–ª–∏–∫—Å–∏—Ä–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.");
            GameCloud.Instance.UpdateResource("PLAYER_ELIXIR", 15); // –î–æ–±–∞–≤–∏—Ç—å 15 —ç–ª–∏–∫—Å–∏—Ä–æ–≤
            // –î–æ–±–∞–≤—å—Ç–µ Catmoney –∏–≥—Ä–æ–∫—É
        }
        else if (args.purchasedProduct.definition.id == RUBY_PRODUCT_ID_CATMONEYSMALL)
        {
            Debug.Log("–ü–æ–∫—É–ø–∫–∞ –º–∞–ª–µ–Ω—å–∫–∏—Ö –∫–æ—Ç–æ–º–∞–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.");
            GameCloud.Instance.UpdateResource("CATMONEY_ELIXIR", 3); // –î–æ–±–∞–≤–∏—Ç—å 3 –∫–æ—Ç–æ–º–∞–Ω–∏
            // –î–æ–±–∞–≤—å—Ç–µ Catmoney –∏–≥—Ä–æ–∫—É
        }
        else
        {
            Debug.LogWarning($"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç: {args.purchasedProduct.definition.id}");
        }

        return PurchaseProcessingResult.Complete;
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –ø–æ–∫—É–ø–∫–∏
    public void OnPurchaseFailed(Product product, PurchaseFailureReason reason)
    {
        Debug.LogError($"–û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏ {product.definition.id}: {reason}");
    }

    public void OnInitializeFailed(InitializationFailureReason error, string message)
    {
        throw new System.NotImplementedException();
    }


    public string GetLocalizedPrice(string productId)
    {
        if (storeController != null)
        {
            Product product = storeController.products.WithID(productId);
            if (product != null)
            {
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞ "99 RUB"
                return $"{product.metadata.localizedPriceString} {product.metadata.isoCurrencyCode}";
            }
        }
        return "N/A"; // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
    }

}